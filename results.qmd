#Results
```{r}
library(tidyverse)
library(lubridate)
library(ggridges)

#preprocessing

disability <- read_csv("data/mathematics/Mathematics, Age 9, Disability sta.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(disability) <- disability[8, 1:4]
disability <- disability[9:18, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `Disability status of student, including those with 504 plan`,
    Category = "Disability"
  ) |>
  drop_na(`Average scale score`, Year)

gender <- read_csv("data/mathematics/Mathematics, Age 9, Gender.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(gender) <- gender[8, 1:4]
gender <- gender[9:36, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = Gender,
    Category = "Gender"
  ) |>
  drop_na(`Average scale score`, Year)

national_school <- read_csv("data/mathematics/Mathematics, Age 9, National School.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(national_school) <- national_school[8, 1:4]
national_school <- national_school[9:26, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `National School Lunch Program eligibility, 3 categories`,
    Category = "National School Lunch"
  ) |>
  drop_na(`Average scale score`, Year)

race <- read_csv("data/mathematics/Mathematics, Age 9, Race ethnicity.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(race) <- race[8, 1:4]
race <- race[9:92, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `Race/ethnicity (6 categories)`,
    Category = "Race/Ethnicity"
  ) |>
  drop_na(`Average scale score`, Year)

region <- read_csv("data/mathematics/Mathematics, Age 9, Region of the.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(region) <- region[8, 1:4]
region <- region[9:37, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `Region of the country`,
    Category = "Region"
  ) |>
  drop_na(`Average scale score`, Year)

location <- read_csv("data/mathematics/Mathematics, Age 9, School location.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(location) <- location[8, 1:4]
location <- location[9:24, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `School location, 4 categories`,
    Category = "School Location"
  ) |>
  drop_na(`Average scale score`, Year)

eng_status <-read_csv("data/mathematics/Mathematics, Age 9, Status as Engl.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(eng_status) <- eng_status[8, 1:4]
eng_status <- eng_status[9:18, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `Status as English learner, 2 categories`,
    Category = "English Learner Status"
  ) |>
  drop_na(`Average scale score`, Year)

all_students <- read_csv("data/mathematics/Mathematics, Age 9, All students.csv", show_col_types = FALSE, name_repair = 'minimal')
colnames(all_students) <- all_students[8, 1:4]
all_students <- all_students[9:24, 1:4] |>
  mutate(
    Year = ymd(Year, truncated = 2L),
    `Average scale score` = as.numeric(na_if(na_if(`Average scale score`, "‡"), "—")),
    Subcategory = `All students`,
    Category = "All Students"
  ) |>
  drop_na(`Average scale score`, Year)
```
```{r}
ggplot(all_students, aes(x = Year, y = `Average scale score`)) +
  geom_point(size = 3) +
  geom_line(group = 1, size = 1) +
  labs(
    title = "Mathematics Scores for All Students Over Time",
    x = "Year",
    y = "Average Scale Score"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 15, hjust = 0.5, face = "bold"),
    axis.text.x = element_text(size = 11, angle = 45, hjust = 1),
    axis.text.y = element_text(size = 11)
  )



```

This graph provides a clear visualization of the trend of Mathematics scores for all students aged 9. It shows a significant improvement in scores from 1980 through the early 2000s, with scores peaking around 2012. Between 2008 and 2012, there is a plateau at the highest score, suggesting a possible threshold where further improvements in score are difficult to achieve.

The drop in scores after 2012 raises questions about possible changes in factors such as resource allocation, changing education policies, or broader socioeconomic issues. The sharp drop between 2020 and 2022 is most likely related to the COVID-19 pandemic, which disrupted education globally and may have disproportionately impacted students. This two year period decline is consistent across all categories, emphasising the distruption it caused to students' learning. 

-common core? 2010

```{r}
key_categories <- combined_data |>
  filter(Subcategory %in% c("White (not Hispanic)", "Black (not Hispanic)", "Hispanic", "All students"))

ggplot(key_categories, aes(x = Year, y = `Average scale score`, group = Subcategory)) +
  geom_line(aes(color = Subcategory, size = Subcategory == "All students"), size = 1.2) +
  geom_point(aes(color = Subcategory, size = Subcategory == "All students"), shape = 21, stroke = 1) +
  scale_color_manual(
    values = c(
      "All students" = "black",
      "White (not Hispanic)" = "pink",  
      "Black (not Hispanic)" = "red", 
      "Hispanic" = "coral"   
    )
  ) +
  scale_size_manual(
    values = c("FALSE" = 0.8, "TRUE" = 1.5),
    guide = "none"  # Hides the legend for size
  ) +
  labs(
    title = "Trends in Average Scores for Selected Demographics",
    x = "Year",
    y = "Average Scale Score",
    color = "Subcategory"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 15, hjust = 0.5, face = "bold"),
    axis.text.x = element_text(angle = 45, hjust = 1)
  )

```
